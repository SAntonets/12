//
import iziToast from "izitoast";
import "izitoast/dist/css/iziToast.min.css";
import SimpleLightbox from "simplelightbox";
import "simplelightbox/dist/simple-lightbox.min.css";

const searchForm = document.getElementById('search-form');
const searchInput = document.getElementById('search-form-input');
const loader = document.getElementById('loader');
const gallery = document.querySelector('.gallery');
const loadMoreButton = document.getElementById('load-more-button');
let page = 1;

searchForm.addEventListener('submit', handleFormSubmit);
loadMoreButton.addEventListener('click', loadMoreImages);

async function handleFormSubmit(event) {
    event.preventDefault();
    const searchValue = searchInput.value.trim();
    if (searchValue === '') {
        iziToast.warning({
            title: 'Caution',
            message: 'The search field cannot be empty!',
        });
        return;
    }

    loader.style.display = 'block';
    gallery.innerHTML = ''; // Очистка галереї перед новим пошуком
    page = 1; // Скидання сторінки до першої при новому пошуку
    await performSearch(searchValue);
}

async function loadMoreImages() {
    loader.style.display = 'block';
    page++; // Збільшення номеру сторінки для нового запиту
    const searchValue = searchInput.value.trim();
    await performSearch(searchValue);
}

async function performSearch(searchValue) {
    const apiKey = '42176348-9192a588252a9fae2debe28a6';
    let apiUrl = `https://pixabay.com/api/?key=${apiKey}&q=${searchValue}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=15`;

    try {
        const response = await fetch(apiUrl);
        const data = await response.json();
        if (data.hits.length > 0) {
            displayImages(data.hits);
            if (data.hits.length < 15) {
                loadMoreButton.style.display = 'none';
            } else {
                loadMoreButton.style.display = 'block';
            }
            smoothScroll();
        } else {
            iziToast.info({
                title: 'Info',
                message: 'Sorry, there are no images matching your search query. Please try again!',
                position: 'topCenter',
            });
        }
    } catch (error) {
        showErrorToast();
        console.error('Fetch error:', error);
    } finally {
        loader.style.display = 'none';
    }
}

function displayImages(images) {
    const galleryContainer = document.querySelector('.gallery');
    galleryContainer.innerHTML += images.map(image => `
        <li class="gallery-item">
            <a href="${image.largeImageURL}" data-lightbox="gallery">
                <img src="${image.webformatURL}" alt="${image.tags}" class="image-card-image">
                <div class="image-card-details">
                    <span class="image-card-likes"><span class="bold">Likes:</span><br>${image.likes}</span>
                    <span class="image-card-views"><span class="bold">Views:</span><br>${image.views}</span>
                    <span class="image-card-comments"><span class="bold">Comments:</span><br>${image.comments}</span>
                    <span class="image-card-downloads"><span class="bold">Downloads:</span><br>${image.downloads}</span>
                </div>
            </a>
        </li>
    `).join('');

    initLightbox();
}

function initLightbox() {
    const options = {
        captions: true,
        captionType: 'attr',
        captionsData: 'alt',
        captionDelay: 250,
        overlay: true,
        overlayOpacity: 0.8,
    };

    const lightbox = new SimpleLightbox('.gallery a', options);
}

function showErrorToast() {
    iziToast.error({
        title: 'Error',
        message: 'An error occurred while fetching images. Please try again later.',
        position: 'topCenter',
    });
}

function smoothScroll() {
    const galleryItemHeight = document.querySelector('.gallery-item').getBoundingClientRect().height;
    window.scrollBy({
        top: galleryItemHeight * 2, // Прокрутити на висоту двох карточок
        behavior: 'smooth' // Плавна анімація
    });
}
//